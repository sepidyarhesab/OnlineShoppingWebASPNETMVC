//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace OrdersMellatPayment.PaymentGetwayMellat {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PaymentGatewayImplServiceSoapBinding", Namespace="http://service.pgw.sw.bps.com/")]
    public partial class PaymentGatewayImplService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback bpRefundRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback bpSaleReferenceIdRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback bpRefundToPANRequestV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback bpDynamicPayRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback bpInquiryRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback bpSettleRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback bpRefundRequestV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback bpChargePayRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback bpCumulativeDynamicPayRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback bpPayRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback bpRefundInquiryRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback bpReversalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback bpPosRefundRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback bpRefundToPANRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback bpVerifyRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback bpRefundVerifyRequestOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PaymentGatewayImplService() {
            this.Url = global::OrdersMellatPayment.Properties.Settings.Default.OrdersMellatPayment_PaymentGetwayMellat_PaymentGatewayImplService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event bpRefundRequestCompletedEventHandler bpRefundRequestCompleted;
        
        /// <remarks/>
        public event bpSaleReferenceIdRequestCompletedEventHandler bpSaleReferenceIdRequestCompleted;
        
        /// <remarks/>
        public event bpRefundToPANRequestV2CompletedEventHandler bpRefundToPANRequestV2Completed;
        
        /// <remarks/>
        public event bpDynamicPayRequestCompletedEventHandler bpDynamicPayRequestCompleted;
        
        /// <remarks/>
        public event bpInquiryRequestCompletedEventHandler bpInquiryRequestCompleted;
        
        /// <remarks/>
        public event bpSettleRequestCompletedEventHandler bpSettleRequestCompleted;
        
        /// <remarks/>
        public event bpRefundRequestV2CompletedEventHandler bpRefundRequestV2Completed;
        
        /// <remarks/>
        public event bpChargePayRequestCompletedEventHandler bpChargePayRequestCompleted;
        
        /// <remarks/>
        public event bpCumulativeDynamicPayRequestCompletedEventHandler bpCumulativeDynamicPayRequestCompleted;
        
        /// <remarks/>
        public event bpPayRequestCompletedEventHandler bpPayRequestCompleted;
        
        /// <remarks/>
        public event bpRefundInquiryRequestCompletedEventHandler bpRefundInquiryRequestCompleted;
        
        /// <remarks/>
        public event bpReversalRequestCompletedEventHandler bpReversalRequestCompleted;
        
        /// <remarks/>
        public event bpPosRefundRequestCompletedEventHandler bpPosRefundRequestCompleted;
        
        /// <remarks/>
        public event bpRefundToPANRequestCompletedEventHandler bpRefundToPANRequestCompleted;
        
        /// <remarks/>
        public event bpVerifyRequestCompletedEventHandler bpVerifyRequestCompleted;
        
        /// <remarks/>
        public event bpRefundVerifyRequestCompletedEventHandler bpRefundVerifyRequestCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpRefundRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long orderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleOrderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleReferenceId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long refundAmount) {
            object[] results = this.Invoke("bpRefundRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        saleOrderId,
                        saleReferenceId,
                        refundAmount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpRefundRequestAsync(long terminalId, string userName, string userPassword, long orderId, long saleOrderId, long saleReferenceId, long refundAmount) {
            this.bpRefundRequestAsync(terminalId, userName, userPassword, orderId, saleOrderId, saleReferenceId, refundAmount, null);
        }
        
        /// <remarks/>
        public void bpRefundRequestAsync(long terminalId, string userName, string userPassword, long orderId, long saleOrderId, long saleReferenceId, long refundAmount, object userState) {
            if ((this.bpRefundRequestOperationCompleted == null)) {
                this.bpRefundRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpRefundRequestOperationCompleted);
            }
            this.InvokeAsync("bpRefundRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        saleOrderId,
                        saleReferenceId,
                        refundAmount}, this.bpRefundRequestOperationCompleted, userState);
        }
        
        private void OnbpRefundRequestOperationCompleted(object arg) {
            if ((this.bpRefundRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpRefundRequestCompleted(this, new bpRefundRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpSaleReferenceIdRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long orderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleOrderId) {
            object[] results = this.Invoke("bpSaleReferenceIdRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        saleOrderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpSaleReferenceIdRequestAsync(long terminalId, string userName, string userPassword, long orderId, long saleOrderId) {
            this.bpSaleReferenceIdRequestAsync(terminalId, userName, userPassword, orderId, saleOrderId, null);
        }
        
        /// <remarks/>
        public void bpSaleReferenceIdRequestAsync(long terminalId, string userName, string userPassword, long orderId, long saleOrderId, object userState) {
            if ((this.bpSaleReferenceIdRequestOperationCompleted == null)) {
                this.bpSaleReferenceIdRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpSaleReferenceIdRequestOperationCompleted);
            }
            this.InvokeAsync("bpSaleReferenceIdRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        saleOrderId}, this.bpSaleReferenceIdRequestOperationCompleted, userState);
        }
        
        private void OnbpSaleReferenceIdRequestOperationCompleted(object arg) {
            if ((this.bpSaleReferenceIdRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpSaleReferenceIdRequestCompleted(this, new bpSaleReferenceIdRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpRefundToPANRequestV2([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long pan, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool panSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long amount, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleReferenceId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool saleReferenceIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long orderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mobileNo) {
            object[] results = this.Invoke("bpRefundToPANRequestV2", new object[] {
                        user,
                        password,
                        pan,
                        panSpecified,
                        amount,
                        saleReferenceId,
                        saleReferenceIdSpecified,
                        terminalId,
                        orderId,
                        mobileNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpRefundToPANRequestV2Async(string user, string password, long pan, bool panSpecified, long amount, long saleReferenceId, bool saleReferenceIdSpecified, long terminalId, long orderId, string mobileNo) {
            this.bpRefundToPANRequestV2Async(user, password, pan, panSpecified, amount, saleReferenceId, saleReferenceIdSpecified, terminalId, orderId, mobileNo, null);
        }
        
        /// <remarks/>
        public void bpRefundToPANRequestV2Async(string user, string password, long pan, bool panSpecified, long amount, long saleReferenceId, bool saleReferenceIdSpecified, long terminalId, long orderId, string mobileNo, object userState) {
            if ((this.bpRefundToPANRequestV2OperationCompleted == null)) {
                this.bpRefundToPANRequestV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpRefundToPANRequestV2OperationCompleted);
            }
            this.InvokeAsync("bpRefundToPANRequestV2", new object[] {
                        user,
                        password,
                        pan,
                        panSpecified,
                        amount,
                        saleReferenceId,
                        saleReferenceIdSpecified,
                        terminalId,
                        orderId,
                        mobileNo}, this.bpRefundToPANRequestV2OperationCompleted, userState);
        }
        
        private void OnbpRefundToPANRequestV2OperationCompleted(object arg) {
            if ((this.bpRefundToPANRequestV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpRefundToPANRequestV2Completed(this, new bpRefundToPANRequestV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpDynamicPayRequest(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long orderId, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long amount, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string localDate, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string localTime, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string additionalData, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callBackUrl, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string payerId, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long subServiceId, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mobileNo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string encPan, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string panHiddenMode, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cartItem, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string enc) {
            object[] results = this.Invoke("bpDynamicPayRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        amount,
                        localDate,
                        localTime,
                        additionalData,
                        callBackUrl,
                        payerId,
                        subServiceId,
                        mobileNo,
                        encPan,
                        panHiddenMode,
                        cartItem,
                        enc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpDynamicPayRequestAsync(
                    long terminalId, 
                    string userName, 
                    string userPassword, 
                    long orderId, 
                    long amount, 
                    string localDate, 
                    string localTime, 
                    string additionalData, 
                    string callBackUrl, 
                    string payerId, 
                    long subServiceId, 
                    string mobileNo, 
                    string encPan, 
                    string panHiddenMode, 
                    string cartItem, 
                    string enc) {
            this.bpDynamicPayRequestAsync(terminalId, userName, userPassword, orderId, amount, localDate, localTime, additionalData, callBackUrl, payerId, subServiceId, mobileNo, encPan, panHiddenMode, cartItem, enc, null);
        }
        
        /// <remarks/>
        public void bpDynamicPayRequestAsync(
                    long terminalId, 
                    string userName, 
                    string userPassword, 
                    long orderId, 
                    long amount, 
                    string localDate, 
                    string localTime, 
                    string additionalData, 
                    string callBackUrl, 
                    string payerId, 
                    long subServiceId, 
                    string mobileNo, 
                    string encPan, 
                    string panHiddenMode, 
                    string cartItem, 
                    string enc, 
                    object userState) {
            if ((this.bpDynamicPayRequestOperationCompleted == null)) {
                this.bpDynamicPayRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpDynamicPayRequestOperationCompleted);
            }
            this.InvokeAsync("bpDynamicPayRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        amount,
                        localDate,
                        localTime,
                        additionalData,
                        callBackUrl,
                        payerId,
                        subServiceId,
                        mobileNo,
                        encPan,
                        panHiddenMode,
                        cartItem,
                        enc}, this.bpDynamicPayRequestOperationCompleted, userState);
        }
        
        private void OnbpDynamicPayRequestOperationCompleted(object arg) {
            if ((this.bpDynamicPayRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpDynamicPayRequestCompleted(this, new bpDynamicPayRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpInquiryRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long orderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleOrderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleReferenceId) {
            object[] results = this.Invoke("bpInquiryRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        saleOrderId,
                        saleReferenceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpInquiryRequestAsync(long terminalId, string userName, string userPassword, long orderId, long saleOrderId, long saleReferenceId) {
            this.bpInquiryRequestAsync(terminalId, userName, userPassword, orderId, saleOrderId, saleReferenceId, null);
        }
        
        /// <remarks/>
        public void bpInquiryRequestAsync(long terminalId, string userName, string userPassword, long orderId, long saleOrderId, long saleReferenceId, object userState) {
            if ((this.bpInquiryRequestOperationCompleted == null)) {
                this.bpInquiryRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpInquiryRequestOperationCompleted);
            }
            this.InvokeAsync("bpInquiryRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        saleOrderId,
                        saleReferenceId}, this.bpInquiryRequestOperationCompleted, userState);
        }
        
        private void OnbpInquiryRequestOperationCompleted(object arg) {
            if ((this.bpInquiryRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpInquiryRequestCompleted(this, new bpInquiryRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpSettleRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long orderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleOrderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleReferenceId) {
            object[] results = this.Invoke("bpSettleRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        saleOrderId,
                        saleReferenceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpSettleRequestAsync(long terminalId, string userName, string userPassword, long orderId, long saleOrderId, long saleReferenceId) {
            this.bpSettleRequestAsync(terminalId, userName, userPassword, orderId, saleOrderId, saleReferenceId, null);
        }
        
        /// <remarks/>
        public void bpSettleRequestAsync(long terminalId, string userName, string userPassword, long orderId, long saleOrderId, long saleReferenceId, object userState) {
            if ((this.bpSettleRequestOperationCompleted == null)) {
                this.bpSettleRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpSettleRequestOperationCompleted);
            }
            this.InvokeAsync("bpSettleRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        saleOrderId,
                        saleReferenceId}, this.bpSettleRequestOperationCompleted, userState);
        }
        
        private void OnbpSettleRequestOperationCompleted(object arg) {
            if ((this.bpSettleRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpSettleRequestCompleted(this, new bpSettleRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpRefundRequestV2([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string destinationPan, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mobileNo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long orderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleOrderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleReferenceId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long refundAmount) {
            object[] results = this.Invoke("bpRefundRequestV2", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        destinationPan,
                        mobileNo,
                        orderId,
                        saleOrderId,
                        saleReferenceId,
                        refundAmount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpRefundRequestV2Async(long terminalId, string userName, string userPassword, string destinationPan, string mobileNo, long orderId, long saleOrderId, long saleReferenceId, long refundAmount) {
            this.bpRefundRequestV2Async(terminalId, userName, userPassword, destinationPan, mobileNo, orderId, saleOrderId, saleReferenceId, refundAmount, null);
        }
        
        /// <remarks/>
        public void bpRefundRequestV2Async(long terminalId, string userName, string userPassword, string destinationPan, string mobileNo, long orderId, long saleOrderId, long saleReferenceId, long refundAmount, object userState) {
            if ((this.bpRefundRequestV2OperationCompleted == null)) {
                this.bpRefundRequestV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpRefundRequestV2OperationCompleted);
            }
            this.InvokeAsync("bpRefundRequestV2", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        destinationPan,
                        mobileNo,
                        orderId,
                        saleOrderId,
                        saleReferenceId,
                        refundAmount}, this.bpRefundRequestV2OperationCompleted, userState);
        }
        
        private void OnbpRefundRequestV2OperationCompleted(object arg) {
            if ((this.bpRefundRequestV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpRefundRequestV2Completed(this, new bpRefundRequestV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpChargePayRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long orderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long amount, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string localDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string localTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string additionalData, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callBackUrl, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string payerId) {
            object[] results = this.Invoke("bpChargePayRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        amount,
                        localDate,
                        localTime,
                        additionalData,
                        callBackUrl,
                        payerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpChargePayRequestAsync(long terminalId, string userName, string userPassword, long orderId, long amount, string localDate, string localTime, string additionalData, string callBackUrl, string payerId) {
            this.bpChargePayRequestAsync(terminalId, userName, userPassword, orderId, amount, localDate, localTime, additionalData, callBackUrl, payerId, null);
        }
        
        /// <remarks/>
        public void bpChargePayRequestAsync(long terminalId, string userName, string userPassword, long orderId, long amount, string localDate, string localTime, string additionalData, string callBackUrl, string payerId, object userState) {
            if ((this.bpChargePayRequestOperationCompleted == null)) {
                this.bpChargePayRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpChargePayRequestOperationCompleted);
            }
            this.InvokeAsync("bpChargePayRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        amount,
                        localDate,
                        localTime,
                        additionalData,
                        callBackUrl,
                        payerId}, this.bpChargePayRequestOperationCompleted, userState);
        }
        
        private void OnbpChargePayRequestOperationCompleted(object arg) {
            if ((this.bpChargePayRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpChargePayRequestCompleted(this, new bpChargePayRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpCumulativeDynamicPayRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long orderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long amount, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string localDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string localTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string additionalData, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callBackUrl, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mobileNo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string encPan, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string panHiddenMode, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cartItem, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string enc) {
            object[] results = this.Invoke("bpCumulativeDynamicPayRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        amount,
                        localDate,
                        localTime,
                        additionalData,
                        callBackUrl,
                        mobileNo,
                        encPan,
                        panHiddenMode,
                        cartItem,
                        enc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpCumulativeDynamicPayRequestAsync(long terminalId, string userName, string userPassword, long orderId, long amount, string localDate, string localTime, string additionalData, string callBackUrl, string mobileNo, string encPan, string panHiddenMode, string cartItem, string enc) {
            this.bpCumulativeDynamicPayRequestAsync(terminalId, userName, userPassword, orderId, amount, localDate, localTime, additionalData, callBackUrl, mobileNo, encPan, panHiddenMode, cartItem, enc, null);
        }
        
        /// <remarks/>
        public void bpCumulativeDynamicPayRequestAsync(long terminalId, string userName, string userPassword, long orderId, long amount, string localDate, string localTime, string additionalData, string callBackUrl, string mobileNo, string encPan, string panHiddenMode, string cartItem, string enc, object userState) {
            if ((this.bpCumulativeDynamicPayRequestOperationCompleted == null)) {
                this.bpCumulativeDynamicPayRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpCumulativeDynamicPayRequestOperationCompleted);
            }
            this.InvokeAsync("bpCumulativeDynamicPayRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        amount,
                        localDate,
                        localTime,
                        additionalData,
                        callBackUrl,
                        mobileNo,
                        encPan,
                        panHiddenMode,
                        cartItem,
                        enc}, this.bpCumulativeDynamicPayRequestOperationCompleted, userState);
        }
        
        private void OnbpCumulativeDynamicPayRequestOperationCompleted(object arg) {
            if ((this.bpCumulativeDynamicPayRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpCumulativeDynamicPayRequestCompleted(this, new bpCumulativeDynamicPayRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpPayRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long orderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long amount, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string localDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string localTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string additionalData, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callBackUrl, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string payerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mobileNo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string encPan, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string panHiddenMode, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cartItem, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string enc) {
            object[] results = this.Invoke("bpPayRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        amount,
                        localDate,
                        localTime,
                        additionalData,
                        callBackUrl,
                        payerId,
                        mobileNo,
                        encPan,
                        panHiddenMode,
                        cartItem,
                        enc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpPayRequestAsync(long terminalId, string userName, string userPassword, long orderId, long amount, string localDate, string localTime, string additionalData, string callBackUrl, string payerId, string mobileNo, string encPan, string panHiddenMode, string cartItem, string enc) {
            this.bpPayRequestAsync(terminalId, userName, userPassword, orderId, amount, localDate, localTime, additionalData, callBackUrl, payerId, mobileNo, encPan, panHiddenMode, cartItem, enc, null);
        }
        
        /// <remarks/>
        public void bpPayRequestAsync(
                    long terminalId, 
                    string userName, 
                    string userPassword, 
                    long orderId, 
                    long amount, 
                    string localDate, 
                    string localTime, 
                    string additionalData, 
                    string callBackUrl, 
                    string payerId, 
                    string mobileNo, 
                    string encPan, 
                    string panHiddenMode, 
                    string cartItem, 
                    string enc, 
                    object userState) {
            if ((this.bpPayRequestOperationCompleted == null)) {
                this.bpPayRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpPayRequestOperationCompleted);
            }
            this.InvokeAsync("bpPayRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        amount,
                        localDate,
                        localTime,
                        additionalData,
                        callBackUrl,
                        payerId,
                        mobileNo,
                        encPan,
                        panHiddenMode,
                        cartItem,
                        enc}, this.bpPayRequestOperationCompleted, userState);
        }
        
        private void OnbpPayRequestOperationCompleted(object arg) {
            if ((this.bpPayRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpPayRequestCompleted(this, new bpPayRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpRefundInquiryRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long orderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long refundOrderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long refundReferenceId) {
            object[] results = this.Invoke("bpRefundInquiryRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        refundOrderId,
                        refundReferenceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpRefundInquiryRequestAsync(long terminalId, string userName, string userPassword, long orderId, long refundOrderId, long refundReferenceId) {
            this.bpRefundInquiryRequestAsync(terminalId, userName, userPassword, orderId, refundOrderId, refundReferenceId, null);
        }
        
        /// <remarks/>
        public void bpRefundInquiryRequestAsync(long terminalId, string userName, string userPassword, long orderId, long refundOrderId, long refundReferenceId, object userState) {
            if ((this.bpRefundInquiryRequestOperationCompleted == null)) {
                this.bpRefundInquiryRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpRefundInquiryRequestOperationCompleted);
            }
            this.InvokeAsync("bpRefundInquiryRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        refundOrderId,
                        refundReferenceId}, this.bpRefundInquiryRequestOperationCompleted, userState);
        }
        
        private void OnbpRefundInquiryRequestOperationCompleted(object arg) {
            if ((this.bpRefundInquiryRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpRefundInquiryRequestCompleted(this, new bpRefundInquiryRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpReversalRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long orderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleOrderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleReferenceId) {
            object[] results = this.Invoke("bpReversalRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        saleOrderId,
                        saleReferenceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpReversalRequestAsync(long terminalId, string userName, string userPassword, long orderId, long saleOrderId, long saleReferenceId) {
            this.bpReversalRequestAsync(terminalId, userName, userPassword, orderId, saleOrderId, saleReferenceId, null);
        }
        
        /// <remarks/>
        public void bpReversalRequestAsync(long terminalId, string userName, string userPassword, long orderId, long saleOrderId, long saleReferenceId, object userState) {
            if ((this.bpReversalRequestOperationCompleted == null)) {
                this.bpReversalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpReversalRequestOperationCompleted);
            }
            this.InvokeAsync("bpReversalRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        saleOrderId,
                        saleReferenceId}, this.bpReversalRequestOperationCompleted, userState);
        }
        
        private void OnbpReversalRequestOperationCompleted(object arg) {
            if ((this.bpReversalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpReversalRequestCompleted(this, new bpReversalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpPosRefundRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleReferenceId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long refundAmount) {
            object[] results = this.Invoke("bpPosRefundRequest", new object[] {
                        user,
                        password,
                        saleReferenceId,
                        refundAmount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpPosRefundRequestAsync(string user, string password, long saleReferenceId, long refundAmount) {
            this.bpPosRefundRequestAsync(user, password, saleReferenceId, refundAmount, null);
        }
        
        /// <remarks/>
        public void bpPosRefundRequestAsync(string user, string password, long saleReferenceId, long refundAmount, object userState) {
            if ((this.bpPosRefundRequestOperationCompleted == null)) {
                this.bpPosRefundRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpPosRefundRequestOperationCompleted);
            }
            this.InvokeAsync("bpPosRefundRequest", new object[] {
                        user,
                        password,
                        saleReferenceId,
                        refundAmount}, this.bpPosRefundRequestOperationCompleted, userState);
        }
        
        private void OnbpPosRefundRequestOperationCompleted(object arg) {
            if ((this.bpPosRefundRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpPosRefundRequestCompleted(this, new bpPosRefundRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpRefundToPANRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string user, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long pan, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool panSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long amount, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleReferenceId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool saleReferenceIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mobileNo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string orderId) {
            object[] results = this.Invoke("bpRefundToPANRequest", new object[] {
                        user,
                        password,
                        pan,
                        panSpecified,
                        amount,
                        saleReferenceId,
                        saleReferenceIdSpecified,
                        terminalId,
                        mobileNo,
                        orderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpRefundToPANRequestAsync(string user, string password, long pan, bool panSpecified, long amount, long saleReferenceId, bool saleReferenceIdSpecified, long terminalId, string mobileNo, string orderId) {
            this.bpRefundToPANRequestAsync(user, password, pan, panSpecified, amount, saleReferenceId, saleReferenceIdSpecified, terminalId, mobileNo, orderId, null);
        }
        
        /// <remarks/>
        public void bpRefundToPANRequestAsync(string user, string password, long pan, bool panSpecified, long amount, long saleReferenceId, bool saleReferenceIdSpecified, long terminalId, string mobileNo, string orderId, object userState) {
            if ((this.bpRefundToPANRequestOperationCompleted == null)) {
                this.bpRefundToPANRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpRefundToPANRequestOperationCompleted);
            }
            this.InvokeAsync("bpRefundToPANRequest", new object[] {
                        user,
                        password,
                        pan,
                        panSpecified,
                        amount,
                        saleReferenceId,
                        saleReferenceIdSpecified,
                        terminalId,
                        mobileNo,
                        orderId}, this.bpRefundToPANRequestOperationCompleted, userState);
        }
        
        private void OnbpRefundToPANRequestOperationCompleted(object arg) {
            if ((this.bpRefundToPANRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpRefundToPANRequestCompleted(this, new bpRefundToPANRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpVerifyRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long orderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleOrderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long saleReferenceId) {
            object[] results = this.Invoke("bpVerifyRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        saleOrderId,
                        saleReferenceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpVerifyRequestAsync(long terminalId, string userName, string userPassword, long orderId, long saleOrderId, long saleReferenceId) {
            this.bpVerifyRequestAsync(terminalId, userName, userPassword, orderId, saleOrderId, saleReferenceId, null);
        }
        
        /// <remarks/>
        public void bpVerifyRequestAsync(long terminalId, string userName, string userPassword, long orderId, long saleOrderId, long saleReferenceId, object userState) {
            if ((this.bpVerifyRequestOperationCompleted == null)) {
                this.bpVerifyRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpVerifyRequestOperationCompleted);
            }
            this.InvokeAsync("bpVerifyRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        saleOrderId,
                        saleReferenceId}, this.bpVerifyRequestOperationCompleted, userState);
        }
        
        private void OnbpVerifyRequestOperationCompleted(object arg) {
            if ((this.bpVerifyRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpVerifyRequestCompleted(this, new bpVerifyRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://interfaces.core.sw.bps.com/", ResponseNamespace="http://interfaces.core.sw.bps.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bpRefundVerifyRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long terminalId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long orderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long refundOrderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long refundReferenceId) {
            object[] results = this.Invoke("bpRefundVerifyRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        refundOrderId,
                        refundReferenceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bpRefundVerifyRequestAsync(long terminalId, string userName, string userPassword, long orderId, long refundOrderId, long refundReferenceId) {
            this.bpRefundVerifyRequestAsync(terminalId, userName, userPassword, orderId, refundOrderId, refundReferenceId, null);
        }
        
        /// <remarks/>
        public void bpRefundVerifyRequestAsync(long terminalId, string userName, string userPassword, long orderId, long refundOrderId, long refundReferenceId, object userState) {
            if ((this.bpRefundVerifyRequestOperationCompleted == null)) {
                this.bpRefundVerifyRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbpRefundVerifyRequestOperationCompleted);
            }
            this.InvokeAsync("bpRefundVerifyRequest", new object[] {
                        terminalId,
                        userName,
                        userPassword,
                        orderId,
                        refundOrderId,
                        refundReferenceId}, this.bpRefundVerifyRequestOperationCompleted, userState);
        }
        
        private void OnbpRefundVerifyRequestOperationCompleted(object arg) {
            if ((this.bpRefundVerifyRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bpRefundVerifyRequestCompleted(this, new bpRefundVerifyRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpRefundRequestCompletedEventHandler(object sender, bpRefundRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpRefundRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpRefundRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpSaleReferenceIdRequestCompletedEventHandler(object sender, bpSaleReferenceIdRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpSaleReferenceIdRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpSaleReferenceIdRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpRefundToPANRequestV2CompletedEventHandler(object sender, bpRefundToPANRequestV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpRefundToPANRequestV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpRefundToPANRequestV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpDynamicPayRequestCompletedEventHandler(object sender, bpDynamicPayRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpDynamicPayRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpDynamicPayRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpInquiryRequestCompletedEventHandler(object sender, bpInquiryRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpInquiryRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpInquiryRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpSettleRequestCompletedEventHandler(object sender, bpSettleRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpSettleRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpSettleRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpRefundRequestV2CompletedEventHandler(object sender, bpRefundRequestV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpRefundRequestV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpRefundRequestV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpChargePayRequestCompletedEventHandler(object sender, bpChargePayRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpChargePayRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpChargePayRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpCumulativeDynamicPayRequestCompletedEventHandler(object sender, bpCumulativeDynamicPayRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpCumulativeDynamicPayRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpCumulativeDynamicPayRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpPayRequestCompletedEventHandler(object sender, bpPayRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpPayRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpPayRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpRefundInquiryRequestCompletedEventHandler(object sender, bpRefundInquiryRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpRefundInquiryRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpRefundInquiryRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpReversalRequestCompletedEventHandler(object sender, bpReversalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpReversalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpReversalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpPosRefundRequestCompletedEventHandler(object sender, bpPosRefundRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpPosRefundRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpPosRefundRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpRefundToPANRequestCompletedEventHandler(object sender, bpRefundToPANRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpRefundToPANRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpRefundToPANRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpVerifyRequestCompletedEventHandler(object sender, bpVerifyRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpVerifyRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpVerifyRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void bpRefundVerifyRequestCompletedEventHandler(object sender, bpRefundVerifyRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bpRefundVerifyRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bpRefundVerifyRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591