@using PagedList.Mvc
@model PagedList.IPagedList<OrdersInventory.ViewModels.Inventory.VMProduct.VmMainProduct>
@{
    ViewBag.Title = "جستجو|Search";
    Layout = "~/Views/Layouts/_MainLayouts.cshtml";
}
<div class="row mb-5">
    <div class="col-lg-12 col-md-11">
        <div class="row">
            <div class="col-12">
                <!-- breadcrumb -->
                <div class="breadcrumb mb-2 pt-2">
                    <nav>
                        <a href="/Default">خانه</a>
                        <a href="">@ViewBag.Title</a>
                        <a href="">در حال نمایش  @Model.Count() </a>
                    </nav>
                </div>
                <!-- end breadcrumb -->
            </div>
        </div>
        <div class="listing-items row">
            @{
                if (Model != null)
                {
                    foreach (var item in Model)
                    {
                        <div class="col-lg-6 px-0">
                            <div class="product-card product-card-horizontal">
                                <div class="product-card-top search-tp">
                                    <a href="@Url.RouteUrl("Product", new {id = item.Id.ToString()})" class="product-image">
                                        <img src="@item.FileName" alt="@item.PrimaryTitle">
                                    </a>
                                </div>
                                <div class="product-card-middle search-mp">
                                    <h6 class="product-name">
                                        <a href="@Url.RouteUrl("Product", new {id = item.Id.ToString()})">
                                            @item.PrimaryTitle
                                        </a>
                                    </h6>
                                    <p class="product-name">
                                        @item.SecondaryTitle
                                    </p>
                                    <h6 class="product-name">
                                        موجودی: <span class="@item.QuantityClass">@item.QuantityTitle</span>
                                    </h6>
                                    @{
                                        var ProductFee1 = (item.Fee - ((item.Fee * item.Discount) / 100));
                                        if (item.Discount > 0)
                                        {
                                            <div class="product-price product-price-clone">
                                                <del>@string.Format("{0:##,###}", ProductFee1, "Fee") تومان</del>
                                                @string.Format("{0:##,###}", item.Fee, "Fee") تومان
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="product-price product-price-clone">
                                                @string.Format("{0:##,###}", item.Fee, "Fee") تومان
                                            </div>
                                        }
                                    }

                                </div>
                                @{
                                    var ProductFee = (item.Fee - ((item.Fee * item.Discount) / 100));
                                    if (item.Discount > 0)
                                    {
                                        <div class="product-card-bottom" style=" justify-content: space-around !important;">
                                            <div class="product-price">
                                                <del>
                                                    @string.Format("{0:##,###}", item.Fee, "Fee") تومان
                                                </del>
                                                @string.Format("{0:##,###}", ProductFee, "Fee") تومان
                                            </div>
                                            <a href="@Url.RouteUrl("Product", new {id = item.Id.ToString()})" class="btn-add-to-cart">
                                                مشاهده کالا
                                            </a>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="product-card-bottom search-bp" style=" justify-content: space-around !important;">
                                            <div class="product-price">
                                                @string.Format("{0:##,###}", item.Fee, "Fee") تومان
                                            </div>
                                            <a href="@Url.RouteUrl("Product", new {id = item.Id.ToString()})" class="btn-add-to-cart">
                                                مشاهده کالا
                                            </a>
                                        </div>
                                    }

                                }
                            </div>
                        </div>
                    }
                }
            }


            <div class="col-12 px-0">
                <div class="pagination">
                    @Html.PagedListPager(Model, page => Url.Action("Search",
                        new { page }), new PagedListRenderOptions()
                        {
                            LiElementClasses = new List<string> { "page-item" },
                            ContainerDivClasses = new List<string> { "products-view__pagination" },
                            UlElementClasses = new List<string> { "pagination justify-content-center" },
                            PageCountAndCurrentLocationFormat = "page-item active",
                            DisplayLinkToNextPage = PagedListDisplayMode.Always,
                            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                        })
                </div>
            </div>
        </div>
    </div>
</div>
