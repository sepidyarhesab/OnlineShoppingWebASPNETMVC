@using PagedList.Mvc
@model PagedList.IPagedList<OrdersInventory.ViewModels.Inventory.VMProduct.VmMainProductMangement>
@{
    if (Model != null)
    {
        ViewBag.Title = Model.First().CategoreisTitle;
    }

    Layout = "~/Views/Layouts/_MainLayouts.cshtml";
}
@{
    if (Model != null)
    {

        <div class="page-header">
                <div class="page-header__container container">
                    <div class="page-header__breadcrumb">
                        <nav aria-label="breadcrumb" class="card mb-0 contact-us box-shadows" style="padding: 10px">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="/Default">خانه</a>
                                    <svg class="breadcrumb-arrow" width="6px" height="9px">
                                        <use xlink:href="/Helper/Layouts/images/sprite.svg#arrow-rounded-right-6x9"></use>
                                    </svg>
                                </li>
                                <li class="breadcrumb-item">
                                    <a href="">محصولات</a>
                                    @*<svg class="breadcrumb-arrow" width="6px" height="9px">
                    <use xlink:href="/Helper/Layouts/images/sprite.svg#arrow-rounded-right-6x9"></use>
                </svg>*@
                                </li>
                            </ol>
                        </nav>
                    </div>
                </div>
            </div>
       
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="block">
                        <div class="products-view">
                            <div class="products-view__options">
                                <div class="view-options">
                                    <div class="view-options__layout">
                                        <div class="layout-switcher">

                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="products-view__list products-list" data-layout="grid-4-full" data-with-features="false">
                                <div class="products-list__body">

                                    @{

                                        if (Model != null)
                                        {
                                            foreach (var productitem in Model)
                                            {

                                                <div class="products-list__item">
                                                    <div class="product-card">
                                                        <button class="product-card__quickview" type="button">
                                                            <svg width="16px" height="16px">
                                                                <use xlink:href="/Helper/Layouts/images/sprite.svg#quickview-16"></use>
                                                            </svg> <span class="fake-svg-icon"></span>
                                                        </button>
                                                        <div class="product-card__badges-list">
                                                            <div class="product-card__badge product-card__badge--new @productitem.QuantityClass">@productitem.QuantityTitle</div>
                                                        </div>
                                                        <div class="product-card__image">
                                                            <a href="@Url.RouteUrl("Product", new {id = productitem.Id.ToString()})"><img src="@productitem.FileName" alt="@productitem.PrimaryTitle"></a>
                                                        </div>
                                                        <div class="product-card__info">
                                                            <div class="product-card__name"><small> نام کالا : </small><a href="@Url.RouteUrl("Product", new {id = productitem.Id.ToString()})">@productitem.PrimaryTitle</a></div>
                                                            <div class="product-card__name"><small> کد کالا : </small><a href="@Url.RouteUrl("Product", new {id = productitem.Id.ToString()})">@productitem.Code</a></div>
                                                        </div>

                                                        <div class="product-card__actions">
                                                            <div class="product-card__availability">موجودی: <span class="@productitem.QuantityClass">@productitem.QuantityTitle</span></div>
                                                            @{

                                                                var ProductFee = (productitem.Fee - ((productitem.Fee * productitem.Discount) / 100));
                                                                var CatFee = (productitem.Fee - ((productitem.Fee * productitem.ProductDiscount) / 100));
                                                                if (productitem.Discount > 0)
                                                                {

                                                                    <div class="widget-products__prices text-center">
                                                                        <span class="widget-products__new-price ">@string.Format("{0:##,###}", ProductFee, "") تومان</span>
                                                                        <br />
                                                                        <span class="widget-products__old-price ">@string.Format("{0:##,###}", @productitem.Fee, "") تومان</span>
                                                                    </div>
                                                                }
                                                                else if (productitem.ProductDiscount > 0)
                                                                {
                                                                    <div class="widget-products__prices text-center">
                                                                        <span class="widget-products__new-price">@string.Format("{0:##,###}", CatFee, "") تومان</span>
                                                                        <br />
                                                                        <span class="widget-products__old-price">@string.Format("{0:##,###}", @productitem.Fee, "") تومان</span>
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <div class="product-card__prices text-danger">@string.Format("{0:##,###}", @productitem.Fee, "") تومان</div>
                                                                }
                                                            }

                                                            @*<div class="product-card__buttons">
                                                                <a class="btn btn-primary" href="@Url.RouteUrl("Product", new {id = productitem.Id.ToString()})">نمایش محصول</a>
                                                                <a class="btn btn-secondary" href="@Url.RouteUrl("Product", new {id = productitem.Id.ToString()})">نمایش محصول</a>
                                                            </div>*@
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }


                                    }
                                </div>
                            </div>
                            <div class="products-view__pagination">
                                <ul class="pagination justify-content-center">

                                    @Html.PagedListPager(Model, page => Url.Action("ShowAllConfiguration",
                                        new { page }), new PagedListRenderOptions()
                                        {
                                            LiElementClasses = new List<string> { "page-item" },
                                            ContainerDivClasses = new List<string> { "products-view__pagination" },
                                            UlElementClasses = new List<string> { "pagination justify-content-center" },
                                            PageCountAndCurrentLocationFormat = "page-item active",
                                            DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                        })

                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }



}



